// Code generated by github.com/actgardner/gogen-avro. DO NOT EDIT.
/*
 * SOURCE:
 *     message.avsc
 */
package avro

import (
	"github.com/actgardner/gogen-avro/compiler"
	"github.com/actgardner/gogen-avro/vm"
	"github.com/actgardner/gogen-avro/vm/types"
	"io"
)

type TelegramMessage struct {
	Viewtime int64

	Username string

	Message string

	ChatId string

	MessageId string
}

func NewTelegramMessage() *TelegramMessage {
	return &TelegramMessage{}
}

func DeserializeTelegramMessage(r io.Reader) (*TelegramMessage, error) {
	t := NewTelegramMessage()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return nil, err
	}

	err = vm.Eval(r, deser, t)
	if err != nil {
		return nil, err
	}
	return t, err
}

func DeserializeTelegramMessageFromSchema(r io.Reader, schema string) (*TelegramMessage, error) {
	t := NewTelegramMessage()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return nil, err
	}

	err = vm.Eval(r, deser, t)
	if err != nil {
		return nil, err
	}
	return t, err
}

func writeTelegramMessage(r *TelegramMessage, w io.Writer) error {
	var err error

	err = vm.WriteLong(r.Viewtime, w)
	if err != nil {
		return err
	}

	err = vm.WriteString(r.Username, w)
	if err != nil {
		return err
	}

	err = vm.WriteString(r.Message, w)
	if err != nil {
		return err
	}

	err = vm.WriteString(r.ChatId, w)
	if err != nil {
		return err
	}

	err = vm.WriteString(r.MessageId, w)
	if err != nil {
		return err
	}

	return err
}

func (r *TelegramMessage) Serialize(w io.Writer) error {
	return writeTelegramMessage(r, w)
}

func (r *TelegramMessage) Schema() string {
	return "{\"fields\":[{\"name\":\"viewtime\",\"type\":\"long\"},{\"name\":\"username\",\"type\":\"string\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"chatId\",\"type\":\"string\"},{\"name\":\"messageId\",\"type\":\"string\"}],\"name\":\"TelegramMessage\",\"namespace\":\"id.dei\",\"type\":\"record\"}"
}

func (r *TelegramMessage) SchemaName() string {
	return "id.dei.TelegramMessage"
}

func (_ *TelegramMessage) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ *TelegramMessage) SetInt(v int32)       { panic("Unsupported operation") }
func (_ *TelegramMessage) SetLong(v int64)      { panic("Unsupported operation") }
func (_ *TelegramMessage) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ *TelegramMessage) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ *TelegramMessage) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ *TelegramMessage) SetString(v string)   { panic("Unsupported operation") }
func (_ *TelegramMessage) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *TelegramMessage) Get(i int) types.Field {
	switch i {

	case 0:

		return (*types.Long)(&r.Viewtime)

	case 1:

		return (*types.String)(&r.Username)

	case 2:

		return (*types.String)(&r.Message)

	case 3:

		return (*types.String)(&r.ChatId)

	case 4:

		return (*types.String)(&r.MessageId)

	}
	panic("Unknown field index")
}

func (r *TelegramMessage) SetDefault(i int) {
	switch i {

	}
	panic("Unknown field index")
}

func (_ *TelegramMessage) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ *TelegramMessage) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ *TelegramMessage) Finalize()                        {}
